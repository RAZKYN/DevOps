---
- name: Tomcat 9 Installation
  become: yes
  hosts: Appserver
  vars:
        - username: tomcat
        - default_shell: /bin/false
        - home_dir: /opt/tomcat
        - tomcat_version: 9.0.71
        - tomcat_latest: /opt/tomcat/latest
        - tomcat_bin_directory: /opt/tomcat/latest/bin
  tasks:     
    - name: Update the Packages Repos & Cache
      apt:
        update_cache: yes
      when: ansible_facts['os_family'] == "Debian"  
    - name: Install openjdk 11
      package:
        name: "{{ java_package }}"
        state: present
    
    - name: Create a tomcat user
      ansible.builtin.user:
        create_home: yes
        home: "{{ home_dir }}"
        shell: "{{ default_shell }}"
        name: "{{ username }}"
      when: ansible_facts['os_family'] == "Debian"
    
    - name: Downlaod tomcat 9
      ansible.builtin.get_url:
        url: "https://dlcdn.apache.org/tomcat/tomcat-9/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
      when: ansible_facts['os_family'] == "Debian"  
    
    - name: Extract tomcat 9
      ansible.builtin.unarchive:
        creates: "{{ home_dir }}/apache-tomcat-{{ tomcat_version }}"
        src: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: "{{ home_dir }}"
        remote_src: yes
      when: ansible_facts['os_family'] == "Debian"
    
    - name: Create a Symbolic link
      ansible.builtin.file:
        src: "{{ home_dir }}/apache-tomcat-{{ tomcat_version }}"
        dest: "{{ tomcat_latest }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        state: link
      when: ansible_facts['os_family'] == "Debian"
       
    - name: Change the ownership to tomcat user
      ansible.builtin.file:
        path: "{{ home_dir }}"
        state: directory
        recurse: yes
        owner: "{{ username }}"
        group: "{{ username }}"
      when: ansible_facts['os_family'] == "Debian"
    
    - name: find all the .sh files in the tomcat bin directory
      ansible.builtin.find:
      paths: "{{ tomcat_bin_directory }}"
      patterns: "*.sh"
      when: ansible_facts['os_family'] == "Debian"

      register: sh_files_tomcat_bin
    - name: print the files from the previous
      debug:
        var: sh_files_tomcat_bin
      when: ansible_facts['os_family'] == "Debian"
    
    - name: Make shell scripts executable
      ansible.builtin.file:
        path: "{{ item.path }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: '0755'
      loop: "{{ sh_files_tomcat_bin.files }}"
      when: ansible_facts['os_family'] == "Debian"
      